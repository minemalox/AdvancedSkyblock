buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'http://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'idea'

group = "dev.minemalox.${project.modId}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = project.modName

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava.options.encoding = 'UTF-8'

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'snapshot', version: project.mappings
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/advancedskyblock_at.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Load the coremod during development
            property 'fml.coreMods.load', 'dev.minemalox.advancedskyblock.AdvancedSkyblockLoadingPlugin'

            ideaModule "${project.name}.main"
        }

    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

repositories {
    maven {
        name 'JitPack'
        url 'https://jitpack.io'
    }
    mavenCentral()
    maven { url = 'https://repo.spongepowered.org/maven' }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraftVersion}-${project.forgeVersion}"

    embed('com.github.BiscuitDevelopment:DiscordIPC:139c9d6') {
        exclude module: 'gson'
    }

    embed("org.spongepowered:mixin:0.8") { transitive = false }

}

sourceSets {
    main {
        ext.refMap = "mixins.advancedskyblock.refmap.json"
    }
}

jar {
    from(configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "LICENSE.txt", "META-INF/*.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    archiveName = archivesBaseName + "-" + version + "-for-MC-1.12.x.jar"

    manifest.attributes(
            'Main-Class': 'OpenErrorMessage',
            'MixinConfigs': 'mixins.advancedskyblock.json',
            'FMLCorePlugin': "dev.minemalox.advancedskyblock.AdvancedSkyblockLoadingPlugin",
            'ForceLoadAsMod': true,
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            'FMLCorePluginContainsFMLMod': true,
            'ModSide': 'CLIENT',
            'FMLAT': "${modId}_at.cfg"
    )
}

jar.finalizedBy('reobfJar')

task processResourcesDev(type: Copy) {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'litemod.json'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': "1.12"
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'litemod.json'
    }
    into(sourceSets.main.java.outputDir)
}

